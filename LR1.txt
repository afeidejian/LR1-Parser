program -> compoundstmt
 stmt ->  ifstmt  |  whilestmt  |  assgstmt  |  compoundstmt
 compoundstmt ->  { stmts }
 stmts ->  stmt stmts   |   E
 ifstmt ->  if ( boolexpr ) then stmt else stmt
 whilestmt ->  while ( boolexpr ) stmt
 assgstmt ->  ID = arithexpr ;
 boolexpr  ->  arithexpr boolop arithexpr
 boolop ->   <  |  >  |  <=  |  >=  | ==
 arithexpr  ->  multexpr arithexprprime
 arithexprprime ->  + multexpr arithexprprime  |  - multexpr arithexprprime  |   E
 multexpr ->  simpleexpr  multexprprime
 multexprprime ->  * simpleexpr multexprprime  |  / simpleexpr multexprprime  |   E
 simpleexpr ->  ID  |  NUM  |  ( arithexpr )

拆分为单独的表达式
0:boolop -> <
1:boolop -> >
2:boolop -> <=
3:boolop -> >=
4:boolop -> ==
5:stmts -> stmt stmts
6:stmts -> E
7:ifstmt -> if ( boolexpr ) then stmt else stmt
8:compoundstmt -> { stmts }
9:program -> compoundstmt
10:boolexpr -> arithexpr boolop arithexpr
11:whilestmt -> while ( boolexpr ) stmt
12:multexprprime -> * simpleexpr multexprprime
13:multexprprime -> / simpleexpr multexprprime
14:multexprprime -> E
15:assgstmt -> ID = arithexpr ;
16:multexpr -> simpleexpr  multexprprime
17:simpleexpr -> ID
18:simpleexpr -> NUM
19:simpleexpr -> ( arithexpr )
20:arithexprprime -> + multexpr arithexprprime
21:arithexprprime -> - multexpr arithexprprime
22:arithexprprime -> E
23:arithexpr -> multexpr arithexprprime
24:stmt -> ifstmt
25:stmt -> whilestmt
26:stmt -> assgstmt
27:stmt -> compoundstmt

----Symbol----
(  )  *  +  -  /  ;  <  <=  =  ==  >  >=  E  ID  NUM  arithexpr  arithexprprime  assgstmt  boolexpr  boolop  compoundstmt  else  if  ifstmt  multexpr  multexprprime  program  simpleexpr  stmt  stmts  then  while  whilestmt  {  }  
----------------

FirstSet:
boolop = [<, <=, ==, >, >=]
<= = [<=]
E = [E]
program = [{]
while = [while]
boolexpr = [(, ID, NUM]
multexprprime = [*, /, E]
assgstmt = [ID]
multexpr = [(, ID, NUM]
simpleexpr = [(, ID, NUM]
else = [else]
ID = [ID]
if = [if]
== = [==]
stmts = [E, ID, if, while, {]
ifstmt = [if]
NUM = [NUM]
( = [(]
) = [)]
compoundstmt = [{]
* = [*]
then = [then]
+ = [+]
- = [-]
/ = [/]
whilestmt = [while]
arithexprprime = [+, -, E]
{ = [{]
; = [;]
< = [<]
arithexpr = [(, ID, NUM]
} = [}]
= = [=]
> = [>]
stmt = [ID, if, while, {]
>= = [>=]
$ = [$]

-----0-----
compoundstmt -> { stmts }' , 0 , $	
program -> compoundstmt' , 0 , $	

-----1-----
program -> compoundstmt' , 1 , $	

-----2-----
assgstmt -> ID = arithexpr ;' , 0 , E	
assgstmt -> ID = arithexpr ;' , 0 , ID	
assgstmt -> ID = arithexpr ;' , 0 , if	
assgstmt -> ID = arithexpr ;' , 0 , while	
assgstmt -> ID = arithexpr ;' , 0 , {	
assgstmt -> ID = arithexpr ;' , 0 , }	
compoundstmt -> { stmts }' , 1 , $	
compoundstmt -> { stmts }' , 0 , E	
compoundstmt -> { stmts }' , 0 , ID	
compoundstmt -> { stmts }' , 0 , if	
compoundstmt -> { stmts }' , 0 , while	
compoundstmt -> { stmts }' , 0 , {	
compoundstmt -> { stmts }' , 0 , }	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , }	
stmt -> assgstmt' , 0 , E	
stmt -> assgstmt' , 0 , ID	
stmt -> assgstmt' , 0 , if	
stmt -> assgstmt' , 0 , while	
stmt -> assgstmt' , 0 , {	
stmt -> assgstmt' , 0 , }	
stmt -> compoundstmt' , 0 , E	
stmt -> compoundstmt' , 0 , ID	
stmt -> compoundstmt' , 0 , if	
stmt -> compoundstmt' , 0 , while	
stmt -> compoundstmt' , 0 , {	
stmt -> compoundstmt' , 0 , }	
stmt -> ifstmt' , 0 , E	
stmt -> ifstmt' , 0 , ID	
stmt -> ifstmt' , 0 , if	
stmt -> ifstmt' , 0 , while	
stmt -> ifstmt' , 0 , {	
stmt -> ifstmt' , 0 , }	
stmt -> whilestmt' , 0 , E	
stmt -> whilestmt' , 0 , ID	
stmt -> whilestmt' , 0 , if	
stmt -> whilestmt' , 0 , while	
stmt -> whilestmt' , 0 , {	
stmt -> whilestmt' , 0 , }	
stmts -> E' , 0 , }	
stmts -> stmt stmts' , 0 , }	
whilestmt -> while ( boolexpr ) stmt' , 0 , E	
whilestmt -> while ( boolexpr ) stmt' , 0 , ID	
whilestmt -> while ( boolexpr ) stmt' , 0 , if	
whilestmt -> while ( boolexpr ) stmt' , 0 , while	
whilestmt -> while ( boolexpr ) stmt' , 0 , {	
whilestmt -> while ( boolexpr ) stmt' , 0 , }	

-----3-----
stmts -> E' , 1 , }	

-----4-----
assgstmt -> ID = arithexpr ;' , 1 , E	
assgstmt -> ID = arithexpr ;' , 1 , ID	
assgstmt -> ID = arithexpr ;' , 1 , if	
assgstmt -> ID = arithexpr ;' , 1 , while	
assgstmt -> ID = arithexpr ;' , 1 , {	
assgstmt -> ID = arithexpr ;' , 1 , }	

-----5-----
stmt -> assgstmt' , 1 , E	
stmt -> assgstmt' , 1 , ID	
stmt -> assgstmt' , 1 , if	
stmt -> assgstmt' , 1 , while	
stmt -> assgstmt' , 1 , {	
stmt -> assgstmt' , 1 , }	

-----6-----
stmt -> compoundstmt' , 1 , E	
stmt -> compoundstmt' , 1 , ID	
stmt -> compoundstmt' , 1 , if	
stmt -> compoundstmt' , 1 , while	
stmt -> compoundstmt' , 1 , {	
stmt -> compoundstmt' , 1 , }	

-----7-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 1 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 1 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 1 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 1 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 1 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 1 , }	

-----8-----
stmt -> ifstmt' , 1 , E	
stmt -> ifstmt' , 1 , ID	
stmt -> ifstmt' , 1 , if	
stmt -> ifstmt' , 1 , while	
stmt -> ifstmt' , 1 , {	
stmt -> ifstmt' , 1 , }	

-----9-----
assgstmt -> ID = arithexpr ;' , 0 , E	
assgstmt -> ID = arithexpr ;' , 0 , ID	
assgstmt -> ID = arithexpr ;' , 0 , if	
assgstmt -> ID = arithexpr ;' , 0 , while	
assgstmt -> ID = arithexpr ;' , 0 , {	
assgstmt -> ID = arithexpr ;' , 0 , }	
compoundstmt -> { stmts }' , 0 , E	
compoundstmt -> { stmts }' , 0 , ID	
compoundstmt -> { stmts }' , 0 , if	
compoundstmt -> { stmts }' , 0 , while	
compoundstmt -> { stmts }' , 0 , {	
compoundstmt -> { stmts }' , 0 , }	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , }	
stmt -> assgstmt' , 0 , E	
stmt -> assgstmt' , 0 , ID	
stmt -> assgstmt' , 0 , if	
stmt -> assgstmt' , 0 , while	
stmt -> assgstmt' , 0 , {	
stmt -> assgstmt' , 0 , }	
stmt -> compoundstmt' , 0 , E	
stmt -> compoundstmt' , 0 , ID	
stmt -> compoundstmt' , 0 , if	
stmt -> compoundstmt' , 0 , while	
stmt -> compoundstmt' , 0 , {	
stmt -> compoundstmt' , 0 , }	
stmt -> ifstmt' , 0 , E	
stmt -> ifstmt' , 0 , ID	
stmt -> ifstmt' , 0 , if	
stmt -> ifstmt' , 0 , while	
stmt -> ifstmt' , 0 , {	
stmt -> ifstmt' , 0 , }	
stmt -> whilestmt' , 0 , E	
stmt -> whilestmt' , 0 , ID	
stmt -> whilestmt' , 0 , if	
stmt -> whilestmt' , 0 , while	
stmt -> whilestmt' , 0 , {	
stmt -> whilestmt' , 0 , }	
stmts -> E' , 0 , }	
stmts -> stmt stmts' , 0 , }	
stmts -> stmt stmts' , 1 , }	
whilestmt -> while ( boolexpr ) stmt' , 0 , E	
whilestmt -> while ( boolexpr ) stmt' , 0 , ID	
whilestmt -> while ( boolexpr ) stmt' , 0 , if	
whilestmt -> while ( boolexpr ) stmt' , 0 , while	
whilestmt -> while ( boolexpr ) stmt' , 0 , {	
whilestmt -> while ( boolexpr ) stmt' , 0 , }	

-----10-----
compoundstmt -> { stmts }' , 2 , $	

-----11-----
whilestmt -> while ( boolexpr ) stmt' , 1 , E	
whilestmt -> while ( boolexpr ) stmt' , 1 , ID	
whilestmt -> while ( boolexpr ) stmt' , 1 , if	
whilestmt -> while ( boolexpr ) stmt' , 1 , while	
whilestmt -> while ( boolexpr ) stmt' , 1 , {	
whilestmt -> while ( boolexpr ) stmt' , 1 , }	

-----12-----
stmt -> whilestmt' , 1 , E	
stmt -> whilestmt' , 1 , ID	
stmt -> whilestmt' , 1 , if	
stmt -> whilestmt' , 1 , while	
stmt -> whilestmt' , 1 , {	
stmt -> whilestmt' , 1 , }	

-----13-----
assgstmt -> ID = arithexpr ;' , 0 , E	
assgstmt -> ID = arithexpr ;' , 0 , ID	
assgstmt -> ID = arithexpr ;' , 0 , if	
assgstmt -> ID = arithexpr ;' , 0 , while	
assgstmt -> ID = arithexpr ;' , 0 , {	
assgstmt -> ID = arithexpr ;' , 0 , }	
compoundstmt -> { stmts }' , 0 , E	
compoundstmt -> { stmts }' , 1 , E	
compoundstmt -> { stmts }' , 0 , ID	
compoundstmt -> { stmts }' , 1 , ID	
compoundstmt -> { stmts }' , 0 , if	
compoundstmt -> { stmts }' , 1 , if	
compoundstmt -> { stmts }' , 0 , while	
compoundstmt -> { stmts }' , 1 , while	
compoundstmt -> { stmts }' , 0 , {	
compoundstmt -> { stmts }' , 1 , {	
compoundstmt -> { stmts }' , 0 , }	
compoundstmt -> { stmts }' , 1 , }	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , }	
stmt -> assgstmt' , 0 , E	
stmt -> assgstmt' , 0 , ID	
stmt -> assgstmt' , 0 , if	
stmt -> assgstmt' , 0 , while	
stmt -> assgstmt' , 0 , {	
stmt -> assgstmt' , 0 , }	
stmt -> compoundstmt' , 0 , E	
stmt -> compoundstmt' , 0 , ID	
stmt -> compoundstmt' , 0 , if	
stmt -> compoundstmt' , 0 , while	
stmt -> compoundstmt' , 0 , {	
stmt -> compoundstmt' , 0 , }	
stmt -> ifstmt' , 0 , E	
stmt -> ifstmt' , 0 , ID	
stmt -> ifstmt' , 0 , if	
stmt -> ifstmt' , 0 , while	
stmt -> ifstmt' , 0 , {	
stmt -> ifstmt' , 0 , }	
stmt -> whilestmt' , 0 , E	
stmt -> whilestmt' , 0 , ID	
stmt -> whilestmt' , 0 , if	
stmt -> whilestmt' , 0 , while	
stmt -> whilestmt' , 0 , {	
stmt -> whilestmt' , 0 , }	
stmts -> E' , 0 , }	
stmts -> stmt stmts' , 0 , }	
whilestmt -> while ( boolexpr ) stmt' , 0 , E	
whilestmt -> while ( boolexpr ) stmt' , 0 , ID	
whilestmt -> while ( boolexpr ) stmt' , 0 , if	
whilestmt -> while ( boolexpr ) stmt' , 0 , while	
whilestmt -> while ( boolexpr ) stmt' , 0 , {	
whilestmt -> while ( boolexpr ) stmt' , 0 , }	

-----14-----
arithexpr -> multexpr arithexprprime' , 0 , ;	
assgstmt -> ID = arithexpr ;' , 2 , E	
assgstmt -> ID = arithexpr ;' , 2 , ID	
assgstmt -> ID = arithexpr ;' , 2 , if	
assgstmt -> ID = arithexpr ;' , 2 , while	
assgstmt -> ID = arithexpr ;' , 2 , {	
assgstmt -> ID = arithexpr ;' , 2 , }	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , ;	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , ;	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , ;	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , ;	
simpleexpr -> NUM' , 0 , E	

-----15-----
arithexpr -> multexpr arithexprprime' , 0 , <	
arithexpr -> multexpr arithexprprime' , 0 , <=	
arithexpr -> multexpr arithexprprime' , 0 , ==	
arithexpr -> multexpr arithexprprime' , 0 , >	
arithexpr -> multexpr arithexprprime' , 0 , >=	
boolexpr -> arithexpr boolop arithexpr' , 0 , )	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 2 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 2 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 2 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 2 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 2 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 2 , }	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , <	
multexpr -> simpleexpr  multexprprime' , 0 , <=	
multexpr -> simpleexpr  multexprprime' , 0 , ==	
multexpr -> simpleexpr  multexprprime' , 0 , >	
multexpr -> simpleexpr  multexprprime' , 0 , >=	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , <	
simpleexpr -> ( arithexpr )' , 0 , <=	
simpleexpr -> ( arithexpr )' , 0 , ==	
simpleexpr -> ( arithexpr )' , 0 , >	
simpleexpr -> ( arithexpr )' , 0 , >=	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , <	
simpleexpr -> ID' , 0 , <=	
simpleexpr -> ID' , 0 , ==	
simpleexpr -> ID' , 0 , >	
simpleexpr -> ID' , 0 , >=	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , <	
simpleexpr -> NUM' , 0 , <=	
simpleexpr -> NUM' , 0 , ==	
simpleexpr -> NUM' , 0 , >	
simpleexpr -> NUM' , 0 , >=	
simpleexpr -> NUM' , 0 , E	

-----16-----
stmts -> stmt stmts' , 2 , }	

-----17-----
compoundstmt -> { stmts }' , 3 , $	

-----18-----
arithexpr -> multexpr arithexprprime' , 0 , <	
arithexpr -> multexpr arithexprprime' , 0 , <=	
arithexpr -> multexpr arithexprprime' , 0 , ==	
arithexpr -> multexpr arithexprprime' , 0 , >	
arithexpr -> multexpr arithexprprime' , 0 , >=	
boolexpr -> arithexpr boolop arithexpr' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , <	
multexpr -> simpleexpr  multexprprime' , 0 , <=	
multexpr -> simpleexpr  multexprprime' , 0 , ==	
multexpr -> simpleexpr  multexprprime' , 0 , >	
multexpr -> simpleexpr  multexprprime' , 0 , >=	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , <	
simpleexpr -> ( arithexpr )' , 0 , <=	
simpleexpr -> ( arithexpr )' , 0 , ==	
simpleexpr -> ( arithexpr )' , 0 , >	
simpleexpr -> ( arithexpr )' , 0 , >=	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , <	
simpleexpr -> ID' , 0 , <=	
simpleexpr -> ID' , 0 , ==	
simpleexpr -> ID' , 0 , >	
simpleexpr -> ID' , 0 , >=	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , <	
simpleexpr -> NUM' , 0 , <=	
simpleexpr -> NUM' , 0 , ==	
simpleexpr -> NUM' , 0 , >	
simpleexpr -> NUM' , 0 , >=	
simpleexpr -> NUM' , 0 , E	
whilestmt -> while ( boolexpr ) stmt' , 2 , E	
whilestmt -> while ( boolexpr ) stmt' , 2 , ID	
whilestmt -> while ( boolexpr ) stmt' , 2 , if	
whilestmt -> while ( boolexpr ) stmt' , 2 , while	
whilestmt -> while ( boolexpr ) stmt' , 2 , {	
whilestmt -> while ( boolexpr ) stmt' , 2 , }	

-----19-----
compoundstmt -> { stmts }' , 2 , E	
compoundstmt -> { stmts }' , 2 , ID	
compoundstmt -> { stmts }' , 2 , if	
compoundstmt -> { stmts }' , 2 , while	
compoundstmt -> { stmts }' , 2 , {	
compoundstmt -> { stmts }' , 2 , }	

-----20-----
arithexpr -> multexpr arithexprprime' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , )	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 1 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 1 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 1 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 1 , /	
simpleexpr -> ( arithexpr )' , 1 , ;	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ( arithexpr )' , 1 , E	
simpleexpr -> ID' , 0 , )	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , )	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , E	

-----21-----
simpleexpr -> ID' , 1 , *	
simpleexpr -> ID' , 1 , +	
simpleexpr -> ID' , 1 , -	
simpleexpr -> ID' , 1 , /	
simpleexpr -> ID' , 1 , ;	
simpleexpr -> ID' , 1 , E	

-----22-----
simpleexpr -> NUM' , 1 , *	
simpleexpr -> NUM' , 1 , +	
simpleexpr -> NUM' , 1 , -	
simpleexpr -> NUM' , 1 , /	
simpleexpr -> NUM' , 1 , ;	
simpleexpr -> NUM' , 1 , E	

-----23-----
assgstmt -> ID = arithexpr ;' , 3 , E	
assgstmt -> ID = arithexpr ;' , 3 , ID	
assgstmt -> ID = arithexpr ;' , 3 , if	
assgstmt -> ID = arithexpr ;' , 3 , while	
assgstmt -> ID = arithexpr ;' , 3 , {	
assgstmt -> ID = arithexpr ;' , 3 , }	

-----24-----
arithexpr -> multexpr arithexprprime' , 1 , ;	
arithexprprime -> + multexpr arithexprprime' , 0 , ;	
arithexprprime -> - multexpr arithexprprime' , 0 , ;	
arithexprprime -> E' , 0 , ;	

-----25-----
multexpr -> simpleexpr  multexprprime' , 1 , +	
multexpr -> simpleexpr  multexprprime' , 1 , -	
multexpr -> simpleexpr  multexprprime' , 1 , ;	
multexpr -> simpleexpr  multexprprime' , 1 , E	
multexprprime -> * simpleexpr multexprprime' , 0 , +	
multexprprime -> * simpleexpr multexprprime' , 0 , -	
multexprprime -> * simpleexpr multexprprime' , 0 , ;	
multexprprime -> * simpleexpr multexprprime' , 0 , E	
multexprprime -> / simpleexpr multexprprime' , 0 , +	
multexprprime -> / simpleexpr multexprprime' , 0 , -	
multexprprime -> / simpleexpr multexprprime' , 0 , ;	
multexprprime -> / simpleexpr multexprprime' , 0 , E	
multexprprime -> E' , 0 , +	
multexprprime -> E' , 0 , -	
multexprprime -> E' , 0 , ;	
multexprprime -> E' , 0 , E	

-----26-----
arithexpr -> multexpr arithexprprime' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , )	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 1 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 1 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 1 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 1 , /	
simpleexpr -> ( arithexpr )' , 1 , <	
simpleexpr -> ( arithexpr )' , 1 , <=	
simpleexpr -> ( arithexpr )' , 1 , ==	
simpleexpr -> ( arithexpr )' , 1 , >	
simpleexpr -> ( arithexpr )' , 1 , >=	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ( arithexpr )' , 1 , E	
simpleexpr -> ID' , 0 , )	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , )	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , E	

-----27-----
simpleexpr -> ID' , 1 , *	
simpleexpr -> ID' , 1 , +	
simpleexpr -> ID' , 1 , -	
simpleexpr -> ID' , 1 , /	
simpleexpr -> ID' , 1 , <	
simpleexpr -> ID' , 1 , <=	
simpleexpr -> ID' , 1 , ==	
simpleexpr -> ID' , 1 , >	
simpleexpr -> ID' , 1 , >=	
simpleexpr -> ID' , 1 , E	

-----28-----
simpleexpr -> NUM' , 1 , *	
simpleexpr -> NUM' , 1 , +	
simpleexpr -> NUM' , 1 , -	
simpleexpr -> NUM' , 1 , /	
simpleexpr -> NUM' , 1 , <	
simpleexpr -> NUM' , 1 , <=	
simpleexpr -> NUM' , 1 , ==	
simpleexpr -> NUM' , 1 , >	
simpleexpr -> NUM' , 1 , >=	
simpleexpr -> NUM' , 1 , E	

-----29-----
boolexpr -> arithexpr boolop arithexpr' , 1 , )	
boolop -> <' , 0 , (	
boolop -> <' , 0 , ID	
boolop -> <' , 0 , NUM	
boolop -> <=' , 0 , (	
boolop -> <=' , 0 , ID	
boolop -> <=' , 0 , NUM	
boolop -> ==' , 0 , (	
boolop -> ==' , 0 , ID	
boolop -> ==' , 0 , NUM	
boolop -> >' , 0 , (	
boolop -> >' , 0 , ID	
boolop -> >' , 0 , NUM	
boolop -> >=' , 0 , (	
boolop -> >=' , 0 , ID	
boolop -> >=' , 0 , NUM	

-----30-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 3 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 3 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 3 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 3 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 3 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 3 , }	

-----31-----
arithexpr -> multexpr arithexprprime' , 1 , <	
arithexpr -> multexpr arithexprprime' , 1 , <=	
arithexpr -> multexpr arithexprprime' , 1 , ==	
arithexpr -> multexpr arithexprprime' , 1 , >	
arithexpr -> multexpr arithexprprime' , 1 , >=	
arithexprprime -> + multexpr arithexprprime' , 0 , <	
arithexprprime -> + multexpr arithexprprime' , 0 , <=	
arithexprprime -> + multexpr arithexprprime' , 0 , ==	
arithexprprime -> + multexpr arithexprprime' , 0 , >	
arithexprprime -> + multexpr arithexprprime' , 0 , >=	
arithexprprime -> - multexpr arithexprprime' , 0 , <	
arithexprprime -> - multexpr arithexprprime' , 0 , <=	
arithexprprime -> - multexpr arithexprprime' , 0 , ==	
arithexprprime -> - multexpr arithexprprime' , 0 , >	
arithexprprime -> - multexpr arithexprprime' , 0 , >=	
arithexprprime -> E' , 0 , <	
arithexprprime -> E' , 0 , <=	
arithexprprime -> E' , 0 , ==	
arithexprprime -> E' , 0 , >	
arithexprprime -> E' , 0 , >=	

-----32-----
multexpr -> simpleexpr  multexprprime' , 1 , +	
multexpr -> simpleexpr  multexprprime' , 1 , -	
multexpr -> simpleexpr  multexprprime' , 1 , <	
multexpr -> simpleexpr  multexprprime' , 1 , <=	
multexpr -> simpleexpr  multexprprime' , 1 , ==	
multexpr -> simpleexpr  multexprprime' , 1 , >	
multexpr -> simpleexpr  multexprprime' , 1 , >=	
multexpr -> simpleexpr  multexprprime' , 1 , E	
multexprprime -> * simpleexpr multexprprime' , 0 , +	
multexprprime -> * simpleexpr multexprprime' , 0 , -	
multexprprime -> * simpleexpr multexprprime' , 0 , <	
multexprprime -> * simpleexpr multexprprime' , 0 , <=	
multexprprime -> * simpleexpr multexprprime' , 0 , ==	
multexprprime -> * simpleexpr multexprprime' , 0 , >	
multexprprime -> * simpleexpr multexprprime' , 0 , >=	
multexprprime -> * simpleexpr multexprprime' , 0 , E	
multexprprime -> / simpleexpr multexprprime' , 0 , +	
multexprprime -> / simpleexpr multexprprime' , 0 , -	
multexprprime -> / simpleexpr multexprprime' , 0 , <	
multexprprime -> / simpleexpr multexprprime' , 0 , <=	
multexprprime -> / simpleexpr multexprprime' , 0 , ==	
multexprprime -> / simpleexpr multexprprime' , 0 , >	
multexprprime -> / simpleexpr multexprprime' , 0 , >=	
multexprprime -> / simpleexpr multexprprime' , 0 , E	
multexprprime -> E' , 0 , +	
multexprprime -> E' , 0 , -	
multexprprime -> E' , 0 , <	
multexprprime -> E' , 0 , <=	
multexprprime -> E' , 0 , ==	
multexprprime -> E' , 0 , >	
multexprprime -> E' , 0 , >=	
multexprprime -> E' , 0 , E	

-----33-----
whilestmt -> while ( boolexpr ) stmt' , 3 , E	
whilestmt -> while ( boolexpr ) stmt' , 3 , ID	
whilestmt -> while ( boolexpr ) stmt' , 3 , if	
whilestmt -> while ( boolexpr ) stmt' , 3 , while	
whilestmt -> while ( boolexpr ) stmt' , 3 , {	
whilestmt -> while ( boolexpr ) stmt' , 3 , }	

-----34-----
compoundstmt -> { stmts }' , 3 , E	
compoundstmt -> { stmts }' , 3 , ID	
compoundstmt -> { stmts }' , 3 , if	
compoundstmt -> { stmts }' , 3 , while	
compoundstmt -> { stmts }' , 3 , {	
compoundstmt -> { stmts }' , 3 , }	

-----35-----
arithexpr -> multexpr arithexprprime' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , )	
simpleexpr -> ( arithexpr )' , 1 , )	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 1 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 1 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 1 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 1 , /	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ( arithexpr )' , 1 , E	
simpleexpr -> ID' , 0 , )	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , )	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , E	

-----36-----
simpleexpr -> ID' , 1 , )	
simpleexpr -> ID' , 1 , *	
simpleexpr -> ID' , 1 , +	
simpleexpr -> ID' , 1 , -	
simpleexpr -> ID' , 1 , /	
simpleexpr -> ID' , 1 , E	

-----37-----
simpleexpr -> NUM' , 1 , )	
simpleexpr -> NUM' , 1 , *	
simpleexpr -> NUM' , 1 , +	
simpleexpr -> NUM' , 1 , -	
simpleexpr -> NUM' , 1 , /	
simpleexpr -> NUM' , 1 , E	

-----38-----
simpleexpr -> ( arithexpr )' , 2 , *	
simpleexpr -> ( arithexpr )' , 2 , +	
simpleexpr -> ( arithexpr )' , 2 , -	
simpleexpr -> ( arithexpr )' , 2 , /	
simpleexpr -> ( arithexpr )' , 2 , ;	
simpleexpr -> ( arithexpr )' , 2 , E	

-----39-----
arithexpr -> multexpr arithexprprime' , 1 , )	
arithexprprime -> + multexpr arithexprprime' , 0 , )	
arithexprprime -> - multexpr arithexprprime' , 0 , )	
arithexprprime -> E' , 0 , )	

-----40-----
multexpr -> simpleexpr  multexprprime' , 1 , )	
multexpr -> simpleexpr  multexprprime' , 1 , +	
multexpr -> simpleexpr  multexprprime' , 1 , -	
multexpr -> simpleexpr  multexprprime' , 1 , E	
multexprprime -> * simpleexpr multexprprime' , 0 , )	
multexprprime -> * simpleexpr multexprprime' , 0 , +	
multexprprime -> * simpleexpr multexprprime' , 0 , -	
multexprprime -> * simpleexpr multexprprime' , 0 , E	
multexprprime -> / simpleexpr multexprprime' , 0 , )	
multexprprime -> / simpleexpr multexprprime' , 0 , +	
multexprprime -> / simpleexpr multexprprime' , 0 , -	
multexprprime -> / simpleexpr multexprprime' , 0 , E	
multexprprime -> E' , 0 , )	
multexprprime -> E' , 0 , +	
multexprprime -> E' , 0 , -	
multexprprime -> E' , 0 , E	

-----41-----
assgstmt -> ID = arithexpr ;' , 4 , E	
assgstmt -> ID = arithexpr ;' , 4 , ID	
assgstmt -> ID = arithexpr ;' , 4 , if	
assgstmt -> ID = arithexpr ;' , 4 , while	
assgstmt -> ID = arithexpr ;' , 4 , {	
assgstmt -> ID = arithexpr ;' , 4 , }	

-----42-----
arithexprprime -> + multexpr arithexprprime' , 1 , ;	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , ;	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , ;	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , ;	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , ;	
simpleexpr -> NUM' , 0 , E	

-----43-----
arithexprprime -> - multexpr arithexprprime' , 1 , ;	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , ;	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , ;	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , ;	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , ;	
simpleexpr -> NUM' , 0 , E	

-----44-----
arithexprprime -> E' , 1 , ;	

-----45-----
arithexpr -> multexpr arithexprprime' , 2 , ;	

-----46-----
multexprprime -> * simpleexpr multexprprime' , 1 , +	
multexprprime -> * simpleexpr multexprprime' , 1 , -	
multexprprime -> * simpleexpr multexprprime' , 1 , ;	
multexprprime -> * simpleexpr multexprprime' , 1 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , ;	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , ;	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , ;	
simpleexpr -> NUM' , 0 , E	

-----47-----
multexprprime -> / simpleexpr multexprprime' , 1 , +	
multexprprime -> / simpleexpr multexprprime' , 1 , -	
multexprprime -> / simpleexpr multexprprime' , 1 , ;	
multexprprime -> / simpleexpr multexprprime' , 1 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , ;	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , ;	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , ;	
simpleexpr -> NUM' , 0 , E	

-----48-----
multexprprime -> E' , 1 , +	
multexprprime -> E' , 1 , -	
multexprprime -> E' , 1 , ;	
multexprprime -> E' , 1 , E	

-----49-----
multexpr -> simpleexpr  multexprprime' , 2 , +	
multexpr -> simpleexpr  multexprprime' , 2 , -	
multexpr -> simpleexpr  multexprprime' , 2 , ;	
multexpr -> simpleexpr  multexprprime' , 2 , E	

-----50-----
simpleexpr -> ( arithexpr )' , 2 , *	
simpleexpr -> ( arithexpr )' , 2 , +	
simpleexpr -> ( arithexpr )' , 2 , -	
simpleexpr -> ( arithexpr )' , 2 , /	
simpleexpr -> ( arithexpr )' , 2 , <	
simpleexpr -> ( arithexpr )' , 2 , <=	
simpleexpr -> ( arithexpr )' , 2 , ==	
simpleexpr -> ( arithexpr )' , 2 , >	
simpleexpr -> ( arithexpr )' , 2 , >=	
simpleexpr -> ( arithexpr )' , 2 , E	

-----51-----
boolop -> <' , 1 , (	
boolop -> <' , 1 , ID	
boolop -> <' , 1 , NUM	

-----52-----
boolop -> <=' , 1 , (	
boolop -> <=' , 1 , ID	
boolop -> <=' , 1 , NUM	

-----53-----
boolop -> ==' , 1 , (	
boolop -> ==' , 1 , ID	
boolop -> ==' , 1 , NUM	

-----54-----
boolop -> >' , 1 , (	
boolop -> >' , 1 , ID	
boolop -> >' , 1 , NUM	

-----55-----
boolop -> >=' , 1 , (	
boolop -> >=' , 1 , ID	
boolop -> >=' , 1 , NUM	

-----56-----
arithexpr -> multexpr arithexprprime' , 0 , )	
boolexpr -> arithexpr boolop arithexpr' , 2 , )	
multexpr -> simpleexpr  multexprprime' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , )	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , )	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , )	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , E	

-----57-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 4 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 4 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 4 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 4 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 4 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 4 , }	

-----58-----
arithexprprime -> + multexpr arithexprprime' , 1 , <	
arithexprprime -> + multexpr arithexprprime' , 1 , <=	
arithexprprime -> + multexpr arithexprprime' , 1 , ==	
arithexprprime -> + multexpr arithexprprime' , 1 , >	
arithexprprime -> + multexpr arithexprprime' , 1 , >=	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , <	
multexpr -> simpleexpr  multexprprime' , 0 , <=	
multexpr -> simpleexpr  multexprprime' , 0 , ==	
multexpr -> simpleexpr  multexprprime' , 0 , >	
multexpr -> simpleexpr  multexprprime' , 0 , >=	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , <	
simpleexpr -> ( arithexpr )' , 0 , <=	
simpleexpr -> ( arithexpr )' , 0 , ==	
simpleexpr -> ( arithexpr )' , 0 , >	
simpleexpr -> ( arithexpr )' , 0 , >=	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , <	
simpleexpr -> ID' , 0 , <=	
simpleexpr -> ID' , 0 , ==	
simpleexpr -> ID' , 0 , >	
simpleexpr -> ID' , 0 , >=	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , <	
simpleexpr -> NUM' , 0 , <=	
simpleexpr -> NUM' , 0 , ==	
simpleexpr -> NUM' , 0 , >	
simpleexpr -> NUM' , 0 , >=	
simpleexpr -> NUM' , 0 , E	

-----59-----
arithexprprime -> - multexpr arithexprprime' , 1 , <	
arithexprprime -> - multexpr arithexprprime' , 1 , <=	
arithexprprime -> - multexpr arithexprprime' , 1 , ==	
arithexprprime -> - multexpr arithexprprime' , 1 , >	
arithexprprime -> - multexpr arithexprprime' , 1 , >=	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , <	
multexpr -> simpleexpr  multexprprime' , 0 , <=	
multexpr -> simpleexpr  multexprprime' , 0 , ==	
multexpr -> simpleexpr  multexprprime' , 0 , >	
multexpr -> simpleexpr  multexprprime' , 0 , >=	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , <	
simpleexpr -> ( arithexpr )' , 0 , <=	
simpleexpr -> ( arithexpr )' , 0 , ==	
simpleexpr -> ( arithexpr )' , 0 , >	
simpleexpr -> ( arithexpr )' , 0 , >=	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , <	
simpleexpr -> ID' , 0 , <=	
simpleexpr -> ID' , 0 , ==	
simpleexpr -> ID' , 0 , >	
simpleexpr -> ID' , 0 , >=	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , <	
simpleexpr -> NUM' , 0 , <=	
simpleexpr -> NUM' , 0 , ==	
simpleexpr -> NUM' , 0 , >	
simpleexpr -> NUM' , 0 , >=	
simpleexpr -> NUM' , 0 , E	

-----60-----
arithexprprime -> E' , 1 , <	
arithexprprime -> E' , 1 , <=	
arithexprprime -> E' , 1 , ==	
arithexprprime -> E' , 1 , >	
arithexprprime -> E' , 1 , >=	

-----61-----
arithexpr -> multexpr arithexprprime' , 2 , <	
arithexpr -> multexpr arithexprprime' , 2 , <=	
arithexpr -> multexpr arithexprprime' , 2 , ==	
arithexpr -> multexpr arithexprprime' , 2 , >	
arithexpr -> multexpr arithexprprime' , 2 , >=	

-----62-----
multexprprime -> * simpleexpr multexprprime' , 1 , +	
multexprprime -> * simpleexpr multexprprime' , 1 , -	
multexprprime -> * simpleexpr multexprprime' , 1 , <	
multexprprime -> * simpleexpr multexprprime' , 1 , <=	
multexprprime -> * simpleexpr multexprprime' , 1 , ==	
multexprprime -> * simpleexpr multexprprime' , 1 , >	
multexprprime -> * simpleexpr multexprprime' , 1 , >=	
multexprprime -> * simpleexpr multexprprime' , 1 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , <	
simpleexpr -> ( arithexpr )' , 0 , <=	
simpleexpr -> ( arithexpr )' , 0 , ==	
simpleexpr -> ( arithexpr )' , 0 , >	
simpleexpr -> ( arithexpr )' , 0 , >=	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , <	
simpleexpr -> ID' , 0 , <=	
simpleexpr -> ID' , 0 , ==	
simpleexpr -> ID' , 0 , >	
simpleexpr -> ID' , 0 , >=	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , <	
simpleexpr -> NUM' , 0 , <=	
simpleexpr -> NUM' , 0 , ==	
simpleexpr -> NUM' , 0 , >	
simpleexpr -> NUM' , 0 , >=	
simpleexpr -> NUM' , 0 , E	

-----63-----
multexprprime -> / simpleexpr multexprprime' , 1 , +	
multexprprime -> / simpleexpr multexprprime' , 1 , -	
multexprprime -> / simpleexpr multexprprime' , 1 , <	
multexprprime -> / simpleexpr multexprprime' , 1 , <=	
multexprprime -> / simpleexpr multexprprime' , 1 , ==	
multexprprime -> / simpleexpr multexprprime' , 1 , >	
multexprprime -> / simpleexpr multexprprime' , 1 , >=	
multexprprime -> / simpleexpr multexprprime' , 1 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , <	
simpleexpr -> ( arithexpr )' , 0 , <=	
simpleexpr -> ( arithexpr )' , 0 , ==	
simpleexpr -> ( arithexpr )' , 0 , >	
simpleexpr -> ( arithexpr )' , 0 , >=	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , <	
simpleexpr -> ID' , 0 , <=	
simpleexpr -> ID' , 0 , ==	
simpleexpr -> ID' , 0 , >	
simpleexpr -> ID' , 0 , >=	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , <	
simpleexpr -> NUM' , 0 , <=	
simpleexpr -> NUM' , 0 , ==	
simpleexpr -> NUM' , 0 , >	
simpleexpr -> NUM' , 0 , >=	
simpleexpr -> NUM' , 0 , E	

-----64-----
multexprprime -> E' , 1 , +	
multexprprime -> E' , 1 , -	
multexprprime -> E' , 1 , <	
multexprprime -> E' , 1 , <=	
multexprprime -> E' , 1 , ==	
multexprprime -> E' , 1 , >	
multexprprime -> E' , 1 , >=	
multexprprime -> E' , 1 , E	

-----65-----
multexpr -> simpleexpr  multexprprime' , 2 , +	
multexpr -> simpleexpr  multexprprime' , 2 , -	
multexpr -> simpleexpr  multexprprime' , 2 , <	
multexpr -> simpleexpr  multexprprime' , 2 , <=	
multexpr -> simpleexpr  multexprprime' , 2 , ==	
multexpr -> simpleexpr  multexprprime' , 2 , >	
multexpr -> simpleexpr  multexprprime' , 2 , >=	
multexpr -> simpleexpr  multexprprime' , 2 , E	

-----66-----
assgstmt -> ID = arithexpr ;' , 0 , E	
assgstmt -> ID = arithexpr ;' , 0 , ID	
assgstmt -> ID = arithexpr ;' , 0 , if	
assgstmt -> ID = arithexpr ;' , 0 , while	
assgstmt -> ID = arithexpr ;' , 0 , {	
assgstmt -> ID = arithexpr ;' , 0 , }	
compoundstmt -> { stmts }' , 0 , E	
compoundstmt -> { stmts }' , 0 , ID	
compoundstmt -> { stmts }' , 0 , if	
compoundstmt -> { stmts }' , 0 , while	
compoundstmt -> { stmts }' , 0 , {	
compoundstmt -> { stmts }' , 0 , }	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , }	
stmt -> assgstmt' , 0 , E	
stmt -> assgstmt' , 0 , ID	
stmt -> assgstmt' , 0 , if	
stmt -> assgstmt' , 0 , while	
stmt -> assgstmt' , 0 , {	
stmt -> assgstmt' , 0 , }	
stmt -> compoundstmt' , 0 , E	
stmt -> compoundstmt' , 0 , ID	
stmt -> compoundstmt' , 0 , if	
stmt -> compoundstmt' , 0 , while	
stmt -> compoundstmt' , 0 , {	
stmt -> compoundstmt' , 0 , }	
stmt -> ifstmt' , 0 , E	
stmt -> ifstmt' , 0 , ID	
stmt -> ifstmt' , 0 , if	
stmt -> ifstmt' , 0 , while	
stmt -> ifstmt' , 0 , {	
stmt -> ifstmt' , 0 , }	
stmt -> whilestmt' , 0 , E	
stmt -> whilestmt' , 0 , ID	
stmt -> whilestmt' , 0 , if	
stmt -> whilestmt' , 0 , while	
stmt -> whilestmt' , 0 , {	
stmt -> whilestmt' , 0 , }	
whilestmt -> while ( boolexpr ) stmt' , 0 , E	
whilestmt -> while ( boolexpr ) stmt' , 4 , E	
whilestmt -> while ( boolexpr ) stmt' , 0 , ID	
whilestmt -> while ( boolexpr ) stmt' , 4 , ID	
whilestmt -> while ( boolexpr ) stmt' , 0 , if	
whilestmt -> while ( boolexpr ) stmt' , 4 , if	
whilestmt -> while ( boolexpr ) stmt' , 0 , while	
whilestmt -> while ( boolexpr ) stmt' , 4 , while	
whilestmt -> while ( boolexpr ) stmt' , 0 , {	
whilestmt -> while ( boolexpr ) stmt' , 4 , {	
whilestmt -> while ( boolexpr ) stmt' , 0 , }	
whilestmt -> while ( boolexpr ) stmt' , 4 , }	

-----67-----
simpleexpr -> ( arithexpr )' , 2 , )	
simpleexpr -> ( arithexpr )' , 2 , *	
simpleexpr -> ( arithexpr )' , 2 , +	
simpleexpr -> ( arithexpr )' , 2 , -	
simpleexpr -> ( arithexpr )' , 2 , /	
simpleexpr -> ( arithexpr )' , 2 , E	

-----68-----
simpleexpr -> ( arithexpr )' , 3 , *	
simpleexpr -> ( arithexpr )' , 3 , +	
simpleexpr -> ( arithexpr )' , 3 , -	
simpleexpr -> ( arithexpr )' , 3 , /	
simpleexpr -> ( arithexpr )' , 3 , ;	
simpleexpr -> ( arithexpr )' , 3 , E	

-----69-----
arithexprprime -> + multexpr arithexprprime' , 1 , )	
multexpr -> simpleexpr  multexprprime' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , )	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , )	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , )	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , E	

-----70-----
arithexprprime -> - multexpr arithexprprime' , 1 , )	
multexpr -> simpleexpr  multexprprime' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , )	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , )	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , )	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , E	

-----71-----
arithexprprime -> E' , 1 , )	

-----72-----
arithexpr -> multexpr arithexprprime' , 2 , )	

-----73-----
multexprprime -> * simpleexpr multexprprime' , 1 , )	
multexprprime -> * simpleexpr multexprprime' , 1 , +	
multexprprime -> * simpleexpr multexprprime' , 1 , -	
multexprprime -> * simpleexpr multexprprime' , 1 , E	
simpleexpr -> ( arithexpr )' , 0 , )	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , )	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , )	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , E	

-----74-----
multexprprime -> / simpleexpr multexprprime' , 1 , )	
multexprprime -> / simpleexpr multexprprime' , 1 , +	
multexprprime -> / simpleexpr multexprprime' , 1 , -	
multexprprime -> / simpleexpr multexprprime' , 1 , E	
simpleexpr -> ( arithexpr )' , 0 , )	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , )	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , )	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , E	

-----75-----
multexprprime -> E' , 1 , )	
multexprprime -> E' , 1 , +	
multexprprime -> E' , 1 , -	
multexprprime -> E' , 1 , E	

-----76-----
multexpr -> simpleexpr  multexprprime' , 2 , )	
multexpr -> simpleexpr  multexprprime' , 2 , +	
multexpr -> simpleexpr  multexprprime' , 2 , -	
multexpr -> simpleexpr  multexprprime' , 2 , E	

-----77-----
arithexprprime -> + multexpr arithexprprime' , 0 , ;	
arithexprprime -> + multexpr arithexprprime' , 2 , ;	
arithexprprime -> - multexpr arithexprprime' , 0 , ;	
arithexprprime -> E' , 0 , ;	

-----78-----
arithexprprime -> + multexpr arithexprprime' , 0 , ;	
arithexprprime -> - multexpr arithexprprime' , 0 , ;	
arithexprprime -> - multexpr arithexprprime' , 2 , ;	
arithexprprime -> E' , 0 , ;	

-----79-----
multexprprime -> * simpleexpr multexprprime' , 0 , +	
multexprprime -> * simpleexpr multexprprime' , 2 , +	
multexprprime -> * simpleexpr multexprprime' , 0 , -	
multexprprime -> * simpleexpr multexprprime' , 2 , -	
multexprprime -> * simpleexpr multexprprime' , 0 , ;	
multexprprime -> * simpleexpr multexprprime' , 2 , ;	
multexprprime -> * simpleexpr multexprprime' , 0 , E	
multexprprime -> * simpleexpr multexprprime' , 2 , E	
multexprprime -> / simpleexpr multexprprime' , 0 , +	
multexprprime -> / simpleexpr multexprprime' , 0 , -	
multexprprime -> / simpleexpr multexprprime' , 0 , ;	
multexprprime -> / simpleexpr multexprprime' , 0 , E	
multexprprime -> E' , 0 , +	
multexprprime -> E' , 0 , -	
multexprprime -> E' , 0 , ;	
multexprprime -> E' , 0 , E	

-----80-----
multexprprime -> * simpleexpr multexprprime' , 0 , +	
multexprprime -> * simpleexpr multexprprime' , 0 , -	
multexprprime -> * simpleexpr multexprprime' , 0 , ;	
multexprprime -> * simpleexpr multexprprime' , 0 , E	
multexprprime -> / simpleexpr multexprprime' , 0 , +	
multexprprime -> / simpleexpr multexprprime' , 2 , +	
multexprprime -> / simpleexpr multexprprime' , 0 , -	
multexprprime -> / simpleexpr multexprprime' , 2 , -	
multexprprime -> / simpleexpr multexprprime' , 0 , ;	
multexprprime -> / simpleexpr multexprprime' , 2 , ;	
multexprprime -> / simpleexpr multexprprime' , 0 , E	
multexprprime -> / simpleexpr multexprprime' , 2 , E	
multexprprime -> E' , 0 , +	
multexprprime -> E' , 0 , -	
multexprprime -> E' , 0 , ;	
multexprprime -> E' , 0 , E	

-----81-----
simpleexpr -> ( arithexpr )' , 3 , *	
simpleexpr -> ( arithexpr )' , 3 , +	
simpleexpr -> ( arithexpr )' , 3 , -	
simpleexpr -> ( arithexpr )' , 3 , /	
simpleexpr -> ( arithexpr )' , 3 , <	
simpleexpr -> ( arithexpr )' , 3 , <=	
simpleexpr -> ( arithexpr )' , 3 , ==	
simpleexpr -> ( arithexpr )' , 3 , >	
simpleexpr -> ( arithexpr )' , 3 , >=	
simpleexpr -> ( arithexpr )' , 3 , E	

-----82-----
boolexpr -> arithexpr boolop arithexpr' , 3 , )	

-----83-----
assgstmt -> ID = arithexpr ;' , 0 , else	
compoundstmt -> { stmts }' , 0 , else	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 5 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 5 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , else	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 5 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 5 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 5 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 5 , }	
stmt -> assgstmt' , 0 , else	
stmt -> compoundstmt' , 0 , else	
stmt -> ifstmt' , 0 , else	
stmt -> whilestmt' , 0 , else	
whilestmt -> while ( boolexpr ) stmt' , 0 , else	

-----84-----
arithexprprime -> + multexpr arithexprprime' , 0 , <	
arithexprprime -> + multexpr arithexprprime' , 2 , <	
arithexprprime -> + multexpr arithexprprime' , 0 , <=	
arithexprprime -> + multexpr arithexprprime' , 2 , <=	
arithexprprime -> + multexpr arithexprprime' , 0 , ==	
arithexprprime -> + multexpr arithexprprime' , 2 , ==	
arithexprprime -> + multexpr arithexprprime' , 0 , >	
arithexprprime -> + multexpr arithexprprime' , 2 , >	
arithexprprime -> + multexpr arithexprprime' , 0 , >=	
arithexprprime -> + multexpr arithexprprime' , 2 , >=	
arithexprprime -> - multexpr arithexprprime' , 0 , <	
arithexprprime -> - multexpr arithexprprime' , 0 , <=	
arithexprprime -> - multexpr arithexprprime' , 0 , ==	
arithexprprime -> - multexpr arithexprprime' , 0 , >	
arithexprprime -> - multexpr arithexprprime' , 0 , >=	
arithexprprime -> E' , 0 , <	
arithexprprime -> E' , 0 , <=	
arithexprprime -> E' , 0 , ==	
arithexprprime -> E' , 0 , >	
arithexprprime -> E' , 0 , >=	

-----85-----
arithexprprime -> + multexpr arithexprprime' , 0 , <	
arithexprprime -> + multexpr arithexprprime' , 0 , <=	
arithexprprime -> + multexpr arithexprprime' , 0 , ==	
arithexprprime -> + multexpr arithexprprime' , 0 , >	
arithexprprime -> + multexpr arithexprprime' , 0 , >=	
arithexprprime -> - multexpr arithexprprime' , 0 , <	
arithexprprime -> - multexpr arithexprprime' , 2 , <	
arithexprprime -> - multexpr arithexprprime' , 0 , <=	
arithexprprime -> - multexpr arithexprprime' , 2 , <=	
arithexprprime -> - multexpr arithexprprime' , 0 , ==	
arithexprprime -> - multexpr arithexprprime' , 2 , ==	
arithexprprime -> - multexpr arithexprprime' , 0 , >	
arithexprprime -> - multexpr arithexprprime' , 2 , >	
arithexprprime -> - multexpr arithexprprime' , 0 , >=	
arithexprprime -> - multexpr arithexprprime' , 2 , >=	
arithexprprime -> E' , 0 , <	
arithexprprime -> E' , 0 , <=	
arithexprprime -> E' , 0 , ==	
arithexprprime -> E' , 0 , >	
arithexprprime -> E' , 0 , >=	

-----86-----
multexprprime -> * simpleexpr multexprprime' , 0 , +	
multexprprime -> * simpleexpr multexprprime' , 2 , +	
multexprprime -> * simpleexpr multexprprime' , 0 , -	
multexprprime -> * simpleexpr multexprprime' , 2 , -	
multexprprime -> * simpleexpr multexprprime' , 0 , <	
multexprprime -> * simpleexpr multexprprime' , 2 , <	
multexprprime -> * simpleexpr multexprprime' , 0 , <=	
multexprprime -> * simpleexpr multexprprime' , 2 , <=	
multexprprime -> * simpleexpr multexprprime' , 0 , ==	
multexprprime -> * simpleexpr multexprprime' , 2 , ==	
multexprprime -> * simpleexpr multexprprime' , 0 , >	
multexprprime -> * simpleexpr multexprprime' , 2 , >	
multexprprime -> * simpleexpr multexprprime' , 0 , >=	
multexprprime -> * simpleexpr multexprprime' , 2 , >=	
multexprprime -> * simpleexpr multexprprime' , 0 , E	
multexprprime -> * simpleexpr multexprprime' , 2 , E	
multexprprime -> / simpleexpr multexprprime' , 0 , +	
multexprprime -> / simpleexpr multexprprime' , 0 , -	
multexprprime -> / simpleexpr multexprprime' , 0 , <	
multexprprime -> / simpleexpr multexprprime' , 0 , <=	
multexprprime -> / simpleexpr multexprprime' , 0 , ==	
multexprprime -> / simpleexpr multexprprime' , 0 , >	
multexprprime -> / simpleexpr multexprprime' , 0 , >=	
multexprprime -> / simpleexpr multexprprime' , 0 , E	
multexprprime -> E' , 0 , +	
multexprprime -> E' , 0 , -	
multexprprime -> E' , 0 , <	
multexprprime -> E' , 0 , <=	
multexprprime -> E' , 0 , ==	
multexprprime -> E' , 0 , >	
multexprprime -> E' , 0 , >=	
multexprprime -> E' , 0 , E	

-----87-----
multexprprime -> * simpleexpr multexprprime' , 0 , +	
multexprprime -> * simpleexpr multexprprime' , 0 , -	
multexprprime -> * simpleexpr multexprprime' , 0 , <	
multexprprime -> * simpleexpr multexprprime' , 0 , <=	
multexprprime -> * simpleexpr multexprprime' , 0 , ==	
multexprprime -> * simpleexpr multexprprime' , 0 , >	
multexprprime -> * simpleexpr multexprprime' , 0 , >=	
multexprprime -> * simpleexpr multexprprime' , 0 , E	
multexprprime -> / simpleexpr multexprprime' , 0 , +	
multexprprime -> / simpleexpr multexprprime' , 2 , +	
multexprprime -> / simpleexpr multexprprime' , 0 , -	
multexprprime -> / simpleexpr multexprprime' , 2 , -	
multexprprime -> / simpleexpr multexprprime' , 0 , <	
multexprprime -> / simpleexpr multexprprime' , 2 , <	
multexprprime -> / simpleexpr multexprprime' , 0 , <=	
multexprprime -> / simpleexpr multexprprime' , 2 , <=	
multexprprime -> / simpleexpr multexprprime' , 0 , ==	
multexprprime -> / simpleexpr multexprprime' , 2 , ==	
multexprprime -> / simpleexpr multexprprime' , 0 , >	
multexprprime -> / simpleexpr multexprprime' , 2 , >	
multexprprime -> / simpleexpr multexprprime' , 0 , >=	
multexprprime -> / simpleexpr multexprprime' , 2 , >=	
multexprprime -> / simpleexpr multexprprime' , 0 , E	
multexprprime -> / simpleexpr multexprprime' , 2 , E	
multexprprime -> E' , 0 , +	
multexprprime -> E' , 0 , -	
multexprprime -> E' , 0 , <	
multexprprime -> E' , 0 , <=	
multexprprime -> E' , 0 , ==	
multexprprime -> E' , 0 , >	
multexprprime -> E' , 0 , >=	
multexprprime -> E' , 0 , E	

-----88-----
whilestmt -> while ( boolexpr ) stmt' , 5 , E	
whilestmt -> while ( boolexpr ) stmt' , 5 , ID	
whilestmt -> while ( boolexpr ) stmt' , 5 , if	
whilestmt -> while ( boolexpr ) stmt' , 5 , while	
whilestmt -> while ( boolexpr ) stmt' , 5 , {	
whilestmt -> while ( boolexpr ) stmt' , 5 , }	

-----89-----
simpleexpr -> ( arithexpr )' , 3 , )	
simpleexpr -> ( arithexpr )' , 3 , *	
simpleexpr -> ( arithexpr )' , 3 , +	
simpleexpr -> ( arithexpr )' , 3 , -	
simpleexpr -> ( arithexpr )' , 3 , /	
simpleexpr -> ( arithexpr )' , 3 , E	

-----90-----
arithexprprime -> + multexpr arithexprprime' , 0 , )	
arithexprprime -> + multexpr arithexprprime' , 2 , )	
arithexprprime -> - multexpr arithexprprime' , 0 , )	
arithexprprime -> E' , 0 , )	

-----91-----
arithexprprime -> + multexpr arithexprprime' , 0 , )	
arithexprprime -> - multexpr arithexprprime' , 0 , )	
arithexprprime -> - multexpr arithexprprime' , 2 , )	
arithexprprime -> E' , 0 , )	

-----92-----
multexprprime -> * simpleexpr multexprprime' , 0 , )	
multexprprime -> * simpleexpr multexprprime' , 2 , )	
multexprprime -> * simpleexpr multexprprime' , 0 , +	
multexprprime -> * simpleexpr multexprprime' , 2 , +	
multexprprime -> * simpleexpr multexprprime' , 0 , -	
multexprprime -> * simpleexpr multexprprime' , 2 , -	
multexprprime -> * simpleexpr multexprprime' , 0 , E	
multexprprime -> * simpleexpr multexprprime' , 2 , E	
multexprprime -> / simpleexpr multexprprime' , 0 , )	
multexprprime -> / simpleexpr multexprprime' , 0 , +	
multexprprime -> / simpleexpr multexprprime' , 0 , -	
multexprprime -> / simpleexpr multexprprime' , 0 , E	
multexprprime -> E' , 0 , )	
multexprprime -> E' , 0 , +	
multexprprime -> E' , 0 , -	
multexprprime -> E' , 0 , E	

-----93-----
multexprprime -> * simpleexpr multexprprime' , 0 , )	
multexprprime -> * simpleexpr multexprprime' , 0 , +	
multexprprime -> * simpleexpr multexprprime' , 0 , -	
multexprprime -> * simpleexpr multexprprime' , 0 , E	
multexprprime -> / simpleexpr multexprprime' , 0 , )	
multexprprime -> / simpleexpr multexprprime' , 2 , )	
multexprprime -> / simpleexpr multexprprime' , 0 , +	
multexprprime -> / simpleexpr multexprprime' , 2 , +	
multexprprime -> / simpleexpr multexprprime' , 0 , -	
multexprprime -> / simpleexpr multexprprime' , 2 , -	
multexprprime -> / simpleexpr multexprprime' , 0 , E	
multexprprime -> / simpleexpr multexprprime' , 2 , E	
multexprprime -> E' , 0 , )	
multexprprime -> E' , 0 , +	
multexprprime -> E' , 0 , -	
multexprprime -> E' , 0 , E	

-----94-----
arithexprprime -> + multexpr arithexprprime' , 3 , ;	

-----95-----
arithexprprime -> - multexpr arithexprprime' , 3 , ;	

-----96-----
multexprprime -> * simpleexpr multexprprime' , 3 , +	
multexprprime -> * simpleexpr multexprprime' , 3 , -	
multexprprime -> * simpleexpr multexprprime' , 3 , ;	
multexprprime -> * simpleexpr multexprprime' , 3 , E	

-----97-----
multexprprime -> / simpleexpr multexprprime' , 3 , +	
multexprprime -> / simpleexpr multexprprime' , 3 , -	
multexprprime -> / simpleexpr multexprprime' , 3 , ;	
multexprprime -> / simpleexpr multexprprime' , 3 , E	

-----98-----
assgstmt -> ID = arithexpr ;' , 1 , else	

-----99-----
stmt -> assgstmt' , 1 , else	

-----100-----
stmt -> compoundstmt' , 1 , else	

-----101-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 1 , else	

-----102-----
stmt -> ifstmt' , 1 , else	

-----103-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 6 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 6 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 6 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 6 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 6 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 6 , }	

-----104-----
whilestmt -> while ( boolexpr ) stmt' , 1 , else	

-----105-----
stmt -> whilestmt' , 1 , else	

-----106-----
assgstmt -> ID = arithexpr ;' , 0 , E	
assgstmt -> ID = arithexpr ;' , 0 , ID	
assgstmt -> ID = arithexpr ;' , 0 , if	
assgstmt -> ID = arithexpr ;' , 0 , while	
assgstmt -> ID = arithexpr ;' , 0 , {	
assgstmt -> ID = arithexpr ;' , 0 , }	
compoundstmt -> { stmts }' , 0 , E	
compoundstmt -> { stmts }' , 0 , ID	
compoundstmt -> { stmts }' , 1 , else	
compoundstmt -> { stmts }' , 0 , if	
compoundstmt -> { stmts }' , 0 , while	
compoundstmt -> { stmts }' , 0 , {	
compoundstmt -> { stmts }' , 0 , }	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , }	
stmt -> assgstmt' , 0 , E	
stmt -> assgstmt' , 0 , ID	
stmt -> assgstmt' , 0 , if	
stmt -> assgstmt' , 0 , while	
stmt -> assgstmt' , 0 , {	
stmt -> assgstmt' , 0 , }	
stmt -> compoundstmt' , 0 , E	
stmt -> compoundstmt' , 0 , ID	
stmt -> compoundstmt' , 0 , if	
stmt -> compoundstmt' , 0 , while	
stmt -> compoundstmt' , 0 , {	
stmt -> compoundstmt' , 0 , }	
stmt -> ifstmt' , 0 , E	
stmt -> ifstmt' , 0 , ID	
stmt -> ifstmt' , 0 , if	
stmt -> ifstmt' , 0 , while	
stmt -> ifstmt' , 0 , {	
stmt -> ifstmt' , 0 , }	
stmt -> whilestmt' , 0 , E	
stmt -> whilestmt' , 0 , ID	
stmt -> whilestmt' , 0 , if	
stmt -> whilestmt' , 0 , while	
stmt -> whilestmt' , 0 , {	
stmt -> whilestmt' , 0 , }	
stmts -> E' , 0 , }	
stmts -> stmt stmts' , 0 , }	
whilestmt -> while ( boolexpr ) stmt' , 0 , E	
whilestmt -> while ( boolexpr ) stmt' , 0 , ID	
whilestmt -> while ( boolexpr ) stmt' , 0 , if	
whilestmt -> while ( boolexpr ) stmt' , 0 , while	
whilestmt -> while ( boolexpr ) stmt' , 0 , {	
whilestmt -> while ( boolexpr ) stmt' , 0 , }	

-----107-----
arithexprprime -> + multexpr arithexprprime' , 3 , <	
arithexprprime -> + multexpr arithexprprime' , 3 , <=	
arithexprprime -> + multexpr arithexprprime' , 3 , ==	
arithexprprime -> + multexpr arithexprprime' , 3 , >	
arithexprprime -> + multexpr arithexprprime' , 3 , >=	

-----108-----
arithexprprime -> - multexpr arithexprprime' , 3 , <	
arithexprprime -> - multexpr arithexprprime' , 3 , <=	
arithexprprime -> - multexpr arithexprprime' , 3 , ==	
arithexprprime -> - multexpr arithexprprime' , 3 , >	
arithexprprime -> - multexpr arithexprprime' , 3 , >=	

-----109-----
multexprprime -> * simpleexpr multexprprime' , 3 , +	
multexprprime -> * simpleexpr multexprprime' , 3 , -	
multexprprime -> * simpleexpr multexprprime' , 3 , <	
multexprprime -> * simpleexpr multexprprime' , 3 , <=	
multexprprime -> * simpleexpr multexprprime' , 3 , ==	
multexprprime -> * simpleexpr multexprprime' , 3 , >	
multexprprime -> * simpleexpr multexprprime' , 3 , >=	
multexprprime -> * simpleexpr multexprprime' , 3 , E	

-----110-----
multexprprime -> / simpleexpr multexprprime' , 3 , +	
multexprprime -> / simpleexpr multexprprime' , 3 , -	
multexprprime -> / simpleexpr multexprprime' , 3 , <	
multexprprime -> / simpleexpr multexprprime' , 3 , <=	
multexprprime -> / simpleexpr multexprprime' , 3 , ==	
multexprprime -> / simpleexpr multexprprime' , 3 , >	
multexprprime -> / simpleexpr multexprprime' , 3 , >=	
multexprprime -> / simpleexpr multexprprime' , 3 , E	

-----111-----
arithexprprime -> + multexpr arithexprprime' , 3 , )	

-----112-----
arithexprprime -> - multexpr arithexprprime' , 3 , )	

-----113-----
multexprprime -> * simpleexpr multexprprime' , 3 , )	
multexprprime -> * simpleexpr multexprprime' , 3 , +	
multexprprime -> * simpleexpr multexprprime' , 3 , -	
multexprprime -> * simpleexpr multexprprime' , 3 , E	

-----114-----
multexprprime -> / simpleexpr multexprprime' , 3 , )	
multexprprime -> / simpleexpr multexprprime' , 3 , +	
multexprprime -> / simpleexpr multexprprime' , 3 , -	
multexprprime -> / simpleexpr multexprprime' , 3 , E	

-----115-----
arithexpr -> multexpr arithexprprime' , 0 , ;	
assgstmt -> ID = arithexpr ;' , 2 , else	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , ;	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , ;	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , ;	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , ;	
simpleexpr -> NUM' , 0 , E	

-----116-----
arithexpr -> multexpr arithexprprime' , 0 , <	
arithexpr -> multexpr arithexprprime' , 0 , <=	
arithexpr -> multexpr arithexprprime' , 0 , ==	
arithexpr -> multexpr arithexprprime' , 0 , >	
arithexpr -> multexpr arithexprprime' , 0 , >=	
boolexpr -> arithexpr boolop arithexpr' , 0 , )	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 2 , else	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , <	
multexpr -> simpleexpr  multexprprime' , 0 , <=	
multexpr -> simpleexpr  multexprprime' , 0 , ==	
multexpr -> simpleexpr  multexprprime' , 0 , >	
multexpr -> simpleexpr  multexprprime' , 0 , >=	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , <	
simpleexpr -> ( arithexpr )' , 0 , <=	
simpleexpr -> ( arithexpr )' , 0 , ==	
simpleexpr -> ( arithexpr )' , 0 , >	
simpleexpr -> ( arithexpr )' , 0 , >=	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , <	
simpleexpr -> ID' , 0 , <=	
simpleexpr -> ID' , 0 , ==	
simpleexpr -> ID' , 0 , >	
simpleexpr -> ID' , 0 , >=	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , <	
simpleexpr -> NUM' , 0 , <=	
simpleexpr -> NUM' , 0 , ==	
simpleexpr -> NUM' , 0 , >	
simpleexpr -> NUM' , 0 , >=	
simpleexpr -> NUM' , 0 , E	

-----117-----
assgstmt -> ID = arithexpr ;' , 0 , E	
assgstmt -> ID = arithexpr ;' , 0 , ID	
assgstmt -> ID = arithexpr ;' , 0 , if	
assgstmt -> ID = arithexpr ;' , 0 , while	
assgstmt -> ID = arithexpr ;' , 0 , {	
assgstmt -> ID = arithexpr ;' , 0 , }	
compoundstmt -> { stmts }' , 0 , E	
compoundstmt -> { stmts }' , 0 , ID	
compoundstmt -> { stmts }' , 0 , if	
compoundstmt -> { stmts }' , 0 , while	
compoundstmt -> { stmts }' , 0 , {	
compoundstmt -> { stmts }' , 0 , }	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 7 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 7 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 7 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 7 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 7 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , }	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 7 , }	
stmt -> assgstmt' , 0 , E	
stmt -> assgstmt' , 0 , ID	
stmt -> assgstmt' , 0 , if	
stmt -> assgstmt' , 0 , while	
stmt -> assgstmt' , 0 , {	
stmt -> assgstmt' , 0 , }	
stmt -> compoundstmt' , 0 , E	
stmt -> compoundstmt' , 0 , ID	
stmt -> compoundstmt' , 0 , if	
stmt -> compoundstmt' , 0 , while	
stmt -> compoundstmt' , 0 , {	
stmt -> compoundstmt' , 0 , }	
stmt -> ifstmt' , 0 , E	
stmt -> ifstmt' , 0 , ID	
stmt -> ifstmt' , 0 , if	
stmt -> ifstmt' , 0 , while	
stmt -> ifstmt' , 0 , {	
stmt -> ifstmt' , 0 , }	
stmt -> whilestmt' , 0 , E	
stmt -> whilestmt' , 0 , ID	
stmt -> whilestmt' , 0 , if	
stmt -> whilestmt' , 0 , while	
stmt -> whilestmt' , 0 , {	
stmt -> whilestmt' , 0 , }	
whilestmt -> while ( boolexpr ) stmt' , 0 , E	
whilestmt -> while ( boolexpr ) stmt' , 0 , ID	
whilestmt -> while ( boolexpr ) stmt' , 0 , if	
whilestmt -> while ( boolexpr ) stmt' , 0 , while	
whilestmt -> while ( boolexpr ) stmt' , 0 , {	
whilestmt -> while ( boolexpr ) stmt' , 0 , }	

-----118-----
arithexpr -> multexpr arithexprprime' , 0 , <	
arithexpr -> multexpr arithexprprime' , 0 , <=	
arithexpr -> multexpr arithexprprime' , 0 , ==	
arithexpr -> multexpr arithexprprime' , 0 , >	
arithexpr -> multexpr arithexprprime' , 0 , >=	
boolexpr -> arithexpr boolop arithexpr' , 0 , )	
multexpr -> simpleexpr  multexprprime' , 0 , +	
multexpr -> simpleexpr  multexprprime' , 0 , -	
multexpr -> simpleexpr  multexprprime' , 0 , <	
multexpr -> simpleexpr  multexprprime' , 0 , <=	
multexpr -> simpleexpr  multexprprime' , 0 , ==	
multexpr -> simpleexpr  multexprprime' , 0 , >	
multexpr -> simpleexpr  multexprprime' , 0 , >=	
multexpr -> simpleexpr  multexprprime' , 0 , E	
simpleexpr -> ( arithexpr )' , 0 , *	
simpleexpr -> ( arithexpr )' , 0 , +	
simpleexpr -> ( arithexpr )' , 0 , -	
simpleexpr -> ( arithexpr )' , 0 , /	
simpleexpr -> ( arithexpr )' , 0 , <	
simpleexpr -> ( arithexpr )' , 0 , <=	
simpleexpr -> ( arithexpr )' , 0 , ==	
simpleexpr -> ( arithexpr )' , 0 , >	
simpleexpr -> ( arithexpr )' , 0 , >=	
simpleexpr -> ( arithexpr )' , 0 , E	
simpleexpr -> ID' , 0 , *	
simpleexpr -> ID' , 0 , +	
simpleexpr -> ID' , 0 , -	
simpleexpr -> ID' , 0 , /	
simpleexpr -> ID' , 0 , <	
simpleexpr -> ID' , 0 , <=	
simpleexpr -> ID' , 0 , ==	
simpleexpr -> ID' , 0 , >	
simpleexpr -> ID' , 0 , >=	
simpleexpr -> ID' , 0 , E	
simpleexpr -> NUM' , 0 , *	
simpleexpr -> NUM' , 0 , +	
simpleexpr -> NUM' , 0 , -	
simpleexpr -> NUM' , 0 , /	
simpleexpr -> NUM' , 0 , <	
simpleexpr -> NUM' , 0 , <=	
simpleexpr -> NUM' , 0 , ==	
simpleexpr -> NUM' , 0 , >	
simpleexpr -> NUM' , 0 , >=	
simpleexpr -> NUM' , 0 , E	
whilestmt -> while ( boolexpr ) stmt' , 2 , else	

-----119-----
compoundstmt -> { stmts }' , 2 , else	

-----120-----
assgstmt -> ID = arithexpr ;' , 3 , else	

-----121-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 3 , else	

-----122-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 8 , E	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 8 , ID	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 8 , if	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 8 , while	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 8 , {	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 8 , }	

-----123-----
whilestmt -> while ( boolexpr ) stmt' , 3 , else	

-----124-----
compoundstmt -> { stmts }' , 3 , else	

-----125-----
assgstmt -> ID = arithexpr ;' , 4 , else	

-----126-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 4 , else	

-----127-----
assgstmt -> ID = arithexpr ;' , 0 , else	
compoundstmt -> { stmts }' , 0 , else	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , else	
stmt -> assgstmt' , 0 , else	
stmt -> compoundstmt' , 0 , else	
stmt -> ifstmt' , 0 , else	
stmt -> whilestmt' , 0 , else	
whilestmt -> while ( boolexpr ) stmt' , 0 , else	
whilestmt -> while ( boolexpr ) stmt' , 4 , else	

-----128-----
assgstmt -> ID = arithexpr ;' , 0 , else	
compoundstmt -> { stmts }' , 0 , else	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , else	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 5 , else	
stmt -> assgstmt' , 0 , else	
stmt -> compoundstmt' , 0 , else	
stmt -> ifstmt' , 0 , else	
stmt -> whilestmt' , 0 , else	
whilestmt -> while ( boolexpr ) stmt' , 0 , else	

-----129-----
whilestmt -> while ( boolexpr ) stmt' , 5 , else	

-----130-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 6 , else	

-----131-----
assgstmt -> ID = arithexpr ;' , 0 , else	
compoundstmt -> { stmts }' , 0 , else	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 0 , else	
ifstmt -> if ( boolexpr ) then stmt else stmt' , 7 , else	
stmt -> assgstmt' , 0 , else	
stmt -> compoundstmt' , 0 , else	
stmt -> ifstmt' , 0 , else	
stmt -> whilestmt' , 0 , else	
whilestmt -> while ( boolexpr ) stmt' , 0 , else	

-----132-----
ifstmt -> if ( boolexpr ) then stmt else stmt' , 8 , else	

LR1Table:
0: compoundstmt g2  { s1  
1: stmts g4  ifstmt g9  E s11  compoundstmt g8  while s13  whilestmt g10  assgstmt g7  ID s3  { s5  if s6  stmt g12  
2: $ acc0  
3: = s14  
4: } s15  
5: stmts g16  ifstmt g9  E s11  compoundstmt g8  while s13  whilestmt g10  assgstmt g7  ID s3  { s5  if s6  stmt g12  
6: ( s17  
7: E r26  while r26  ID r26  { r26  if r26  } r26  
8: E r27  while r27  ID r27  { r27  if r27  } r27  
9: E r24  while r24  ID r24  { r24  if r24  } r24  
10: E r25  while r25  ID r25  { r25  if r25  } r25  
11: } r6  
12: stmts g18  ifstmt g9  E s11  compoundstmt g8  while s13  whilestmt g10  assgstmt g7  ID s3  { s5  if s6  stmt g12  
13: ( s19  
14: NUM s25  ( s23  multexpr g20  simpleexpr g22  ID s24  arithexpr g21  
15: $ r8  
16: } s26  
17: NUM s33  ( s31  boolexpr g29  multexpr g27  simpleexpr g30  ID s32  arithexpr g28  
18: } r5  
19: NUM s33  ( s31  boolexpr g34  multexpr g27  simpleexpr g30  ID s32  arithexpr g28  
20: E s38  + s36  - s37  arithexprprime g35  
21: ; s39  
22: E s43  * s41  / s42  multexprprime g40  
23: NUM s49  ( s46  multexpr g44  simpleexpr g45  ID s48  arithexpr g47  
24: E r17  * r17  + r17  - r17  / r17  ; r17  
25: E r18  * r18  + r18  - r18  / r18  ; r18  
26: E r8  while r8  ID r8  { r8  if r8  } r8  
27: E s53  + s51  - s52  arithexprprime g50  
28: boolop g54  == s57  <= s56  < s55  > s58  >= s59  
29: ) s60  
30: E s64  * s62  / s63  multexprprime g61  
31: NUM s49  ( s46  multexpr g44  simpleexpr g45  ID s48  arithexpr g65  
32: == r17  <= r17  E r17  * r17  + r17  - r17  / r17  < r17  > r17  >= r17  
33: == r18  <= r18  E r18  * r18  + r18  - r18  / r18  < r18  > r18  >= r18  
34: ) s66  
35: ; r23  
36: NUM s25  ( s23  multexpr g67  simpleexpr g22  ID s24  
37: NUM s25  ( s23  multexpr g68  simpleexpr g22  ID s24  
38: ; r22  
39: E r15  while r15  ID r15  { r15  if r15  } r15  
40: E r16  + r16  - r16  ; r16  
41: NUM s25  ( s23  simpleexpr g69  ID s24  
42: NUM s25  ( s23  simpleexpr g70  ID s24  
43: E r14  + r14  - r14  ; r14  
44: E s74  + s72  - s73  arithexprprime g71  
45: E s78  * s76  / s77  multexprprime g75  
46: NUM s49  ( s46  multexpr g44  simpleexpr g45  ID s48  arithexpr g79  
47: ) s80  
48: E r17  ) r17  * r17  + r17  - r17  / r17  
49: E r18  ) r18  * r18  + r18  - r18  / r18  
50: == r23  <= r23  < r23  > r23  >= r23  
51: NUM s33  ( s31  multexpr g81  simpleexpr g30  ID s32  
52: NUM s33  ( s31  multexpr g82  simpleexpr g30  ID s32  
53: == r22  <= r22  < r22  > r22  >= r22  
54: NUM s49  ( s46  multexpr g44  simpleexpr g45  ID s48  arithexpr g83  
55: NUM r0  ( r0  ID r0  
56: NUM r2  ( r2  ID r2  
57: NUM r4  ( r4  ID r4  
58: NUM r1  ( r1  ID r1  
59: NUM r3  ( r3  ID r3  
60: then s84  
61: == r16  <= r16  E r16  + r16  - r16  < r16  > r16  >= r16  
62: NUM s33  ( s31  simpleexpr g85  ID s32  
63: NUM s33  ( s31  simpleexpr g86  ID s32  
64: == r14  <= r14  E r14  + r14  - r14  < r14  > r14  >= r14  
65: ) s87  
66: ifstmt g9  compoundstmt g8  while s13  whilestmt g10  assgstmt g7  ID s3  { s5  if s6  stmt g88  
67: E s38  + s36  - s37  arithexprprime g89  
68: E s38  + s36  - s37  arithexprprime g90  
69: E s43  * s41  / s42  multexprprime g91  
70: E s43  * s41  / s42  multexprprime g92  
71: ) r23  
72: NUM s49  ( s46  multexpr g93  simpleexpr g45  ID s48  
73: NUM s49  ( s46  multexpr g94  simpleexpr g45  ID s48  
74: ) r22  
75: E r16  ) r16  + r16  - r16  
76: NUM s49  ( s46  simpleexpr g95  ID s48  
77: NUM s49  ( s46  simpleexpr g96  ID s48  
78: E r14  ) r14  + r14  - r14  
79: ) s97  
80: E r19  * r19  + r19  - r19  / r19  ; r19  
81: E s53  + s51  - s52  arithexprprime g98  
82: E s53  + s51  - s52  arithexprprime g99  
83: ) r10  
84: ifstmt g106  compoundstmt g105  while s108  whilestmt g107  assgstmt g104  ID s100  { s101  if s103  stmt g102  
85: E s64  * s62  / s63  multexprprime g109  
86: E s64  * s62  / s63  multexprprime g110  
87: == r19  <= r19  E r19  * r19  + r19  - r19  / r19  < r19  > r19  >= r19  
88: E r11  while r11  ID r11  { r11  if r11  } r11  
89: ; r20  
90: ; r21  
91: E r12  + r12  - r12  ; r12  
92: E r13  + r13  - r13  ; r13  
93: E s74  + s72  - s73  arithexprprime g111  
94: E s74  + s72  - s73  arithexprprime g112  
95: E s78  * s76  / s77  multexprprime g113  
96: E s78  * s76  / s77  multexprprime g114  
97: E r19  ) r19  * r19  + r19  - r19  / r19  
98: == r20  <= r20  < r20  > r20  >= r20  
99: == r21  <= r21  < r21  > r21  >= r21  
100: = s115  
101: stmts g116  ifstmt g9  E s11  compoundstmt g8  while s13  whilestmt g10  assgstmt g7  ID s3  { s5  if s6  stmt g12  
102: else s117  
103: ( s118  
104: else r26  
105: else r27  
106: else r24  
107: else r25  
108: ( s119  
109: == r12  <= r12  E r12  + r12  - r12  < r12  > r12  >= r12  
110: == r13  <= r13  E r13  + r13  - r13  < r13  > r13  >= r13  
111: ) r20  
112: ) r21  
113: E r12  ) r12  + r12  - r12  
114: E r13  ) r13  + r13  - r13  
115: NUM s25  ( s23  multexpr g20  simpleexpr g22  ID s24  arithexpr g120  
116: } s121  
117: ifstmt g9  compoundstmt g8  while s13  whilestmt g10  assgstmt g7  ID s3  { s5  if s6  stmt g122  
118: NUM s33  ( s31  boolexpr g123  multexpr g27  simpleexpr g30  ID s32  arithexpr g28  
119: NUM s33  ( s31  boolexpr g124  multexpr g27  simpleexpr g30  ID s32  arithexpr g28  
120: ; s125  
121: else r8  
122: E r7  while r7  ID r7  { r7  if r7  } r7  
123: ) s126  
124: ) s127  
125: else r15  
126: then s128  
127: ifstmt g106  compoundstmt g105  while s108  whilestmt g107  assgstmt g104  ID s100  { s101  if s103  stmt g129  
128: ifstmt g106  compoundstmt g105  while s108  whilestmt g107  assgstmt g104  ID s100  { s101  if s103  stmt g130  
129: else r11  
130: else s131  
131: ifstmt g106  compoundstmt g105  while s108  whilestmt g107  assgstmt g104  ID s100  { s101  if s103  stmt g132  
132: else r7  


{
ID = NUM ;
}
/t { ID = NUM ; }
{ while ( ID == NUM ) { ID = NUM } }
{ ID = ID + NUM ; }